{"version":3,"sources":["./src/app/category-manager/add-category/add-category.component.html","./src/app/category-manager/add-category/add-category.component.ts","./src/app/category-manager/category-list/category-list.component.html","./src/app/category-manager/category-list/category-list.component.ts","./src/app/category-manager/category-manager-routing.module.ts","./src/app/category-manager/category-manager.component.html","./src/app/category-manager/category-manager.component.ts","./src/app/category-manager/category-manager.module.ts","./src/app/category-manager/category.service.ts","./src/app/category-manager/confirm-delete/confirm-delete.component.html","./src/app/category-manager/confirm-delete/confirm-delete.component.ts"],"names":[],"mappings":"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","file":"category-manager-category-manager-module-ngfactory-es2015.js","sourcesContent":["<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Add a new category</h4>\n    <button class=\"close\" (click)=\"cancel()\" type=\"button\">x</button>\n\n</div>\n<div class=\"modal-body\">\n    <div class=\"basic-form\">\n        <ngb-alert *ngIf=\"error\" type=\"danger\" (close)=\"error = ''\">{{ error }}</ngb-alert>\n        <form [formGroup]=\"categoryForm\">\n            <div class=\"form-group row\">\n                <label class=\"col-xs-2 col-lg-2 col-md-2 col-sm-12\" for=\"name\">Name:</label>\n                <div class=\"mr-3 col-xs-9 col-lg-9 col-md-10 col-sm-12\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"name\" required id=\"name\">\n                    <small class=\"text-danger\"\n                        *ngIf=\"categoryForm.get('name').dirty && categoryForm.get('name').errors\">\n                        Please enter a name\n                    </small>\n                </div>\n            </div>\n            <!-- <div class=\"form-group row\">\n                <label class=\"col-xs-2 col-lg-2 col-md-2 col-sm-12\" for=\"category\">Category:</label>\n                <div class=\"mr-3 col-xs-9 col-lg-9 col-md-10 col-sm-12\">\n                    <select class=\"form-control\" formControlName=\"category\" required>\n                        <option value=\"North Indian\">North Indian</option>\n                        <option value=\"Fast Food\">Fast Food</option>\n                        <option value=\"Chinese\">Chinese</option>\n                        <option value=\"South Indian\">South Indian</option>\n                        <option value=\"Beverages\">Beverages</option>\n                        <option value=\"Mithai\">Mithai</option>\n                        <option value=\"Cafe\">Cafe</option>\n                        <option value=\"Desserts\">Desserts</option>\n                        <option value=\"Bakery\">Bakery</option>\n                        <option value=\"Pizza\">Pizza</option>\n                        <option value=\"Seafood\">Seafood</option>\n                    </select>\n                </div>\n            </div> -->\n            <div class=\"form-group row\">\n                <label class=\"col-xs-2 col-lg-2 col-md-2 col-sm-12\">Status</label>\n                <div class=\"mr-3 col-xs-9 col-lg-9 col-md-10 col-sm-12\">\n                    <select class=\"form-control\" formControlName=\"status\" required>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-lg-offset-2 col-lg-10\">\n            <button class=\"btn btn-outline-primary\" (click)=\"cancel()\">Cancel</button>\n            <button class=\"btn btn-primary ml-3\" (click)=\"submit()\">{{operation == 'UPDATE'? 'Update': 'Add' }}\n            </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CategoryManagerService } from '../category.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { AuthUserService } from 'src/app/core/auth-user.service';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html'\n})\nexport class AddCategoryComponent implements OnInit, OnDestroy {\n  private ngUnsubcribe = new Subject();\n  categoryForm: FormGroup;\n  logginIn = false;\n  error: string;\n\n  @Input()\n  category: any;\n\n  @Input()\n  operation: 'CREATE' | 'UPDATE' = 'CREATE';\n  constructor(\n    // private router: Router,\n     private formBuilder: FormBuilder,\n     private activeModal: NgbActiveModal,\n     private categoryManager: CategoryManagerService,\n    // private authManagerService: AuthManagerService,\n    // private route: ActivatedRoute,\n    private authUserService: AuthUserService\n\n  ) {\n  }\n  ngOnDestroy() {\n    this.ngUnsubcribe.next();\n    this.ngUnsubcribe.complete();\n  }\n\n  ngOnInit(): void {\n    this.categoryForm = this.formBuilder.group({\n      category_id : this.category.category_id,\n      name: [this.category.name, Validators.required],\n      status: [this.category.status, Validators.required],\n      owner_id: [this.authUserService.user['vendor_id'], Validators.required]\n    });\n  }\n\n  submit(): void {\n    if (this.operation == 'CREATE') {\n      this.categoryManager.addCategory(this.categoryForm.value)\n        .pipe(takeUntil(this.ngUnsubcribe))\n        .subscribe((data: any) => {\n          this.activeModal.close(true);\n          console.log('data: ', data.vendor);\n        });\n    } else {\n      this.categoryManager.updateCategory(this.categoryForm.value)\n        .pipe(takeUntil(this.ngUnsubcribe))\n        .subscribe((data: any) => {\n          this.activeModal.close(true);\n          console.log('data: ', data.vendor);\n        });\n    }\n  }\n\n  cancel(): void {\n    this.activeModal.close(false);\n  }\n\n}\n","<div class=\"d-flex card\" style=\"height: 100%;\">\n    <div class=\"card-title\">\n        <h4>Subcategories </h4>\n        <button class=\"btn btn-primary pull-right\" (click)=\"addCategoryModal()\">Add a new category</button>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"form-group row\">\n            <label class=\"col-sm-1 control-label\">Search: </label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"categoryManagerService.state.searchTerm\"\n                    (ngModelChange)=\"categoryManagerService.searchText()\" placeholder=\"Enter search text\">\n            </div>\n        </div>\n\n        <div class=\"table-responsive \">\n            <table class=\"table table-striped mr-5\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr\n                        *ngFor=\"let category of categoryManagerService.categoryList$ | async | slice: (categoryManagerService.state.page-1) * categoryManagerService.state.pageSize : (categoryManagerService.state.page-1) * categoryManagerService.state.pageSize + categoryManagerService.state.pageSize; let i = index\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td>{{category['name'] }}</td>\n                        <!-- <td> {{category['mobile']}} </td>\n                        <td>{{category['city']}}</td> -->\n                        <td>{{category['status']}}</td>\n                        <td>\n                            <!-- <a [routerLink]=\"['/category/detail', category['_id']]\">View | </a> -->\n                            <!-- | -->\n                            <a href=\"javascript:void(0)\" (click)=updateCategory(category)>Edit</a> |\n                            <a class=\"text-danger\" href=\"javascript:void(0)\" (click)=deleteCategory(category)>Delete</a>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <div class=\"d-flex justify-content-between p-2\">\n                <ngb-pagination [collectionSize]=\"categoryManagerService.total$ | async\"\n                    [(page)]=\"categoryManagerService.state.page\" [pageSize]=\"categoryManagerService.state.pageSize\">\n                </ngb-pagination>\n                <!-- <pagination-controls (pageChange)=\"categoryManagerService.state.page = $event\" class=\"pagination\"></pagination-controls> -->\n\n                <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\"\n                    [(ngModel)]=\"categoryManagerService.state.pageSize\">\n                    <option [ngValue]=\"10\">10</option>\n                    <option [ngValue]=\"25\">25</option>\n                    <option [ngValue]=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject, from } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CategoryManagerService } from '../category.service';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { ConfirmDeleteComponent } from '../confirm-delete/confirm-delete.component';\nimport { AddCategoryComponent } from '../add-category/add-category.component';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html'\n})\nexport class CategoryListComponent implements OnInit, OnDestroy {\n  private ngUnsubcribe = new Subject();\n\n  constructor(public categoryManagerService: CategoryManagerService, private ModalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.categoryManagerService.getCategoryList();\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubcribe.next();\n    this.ngUnsubcribe.complete();\n  }\n\n\n  addCategoryModal(): void {\n    const modalRef = this.ModalService.open(AddCategoryComponent, {\n      size: 'lg',\n      backdrop: 'static'\n    });\n    const category = {\n      category_id: '',\n      name: '',\n      status: 'Active'\n    }\n    modalRef.componentInstance.category = category;\n    modalRef.componentInstance.operation = 'CREATE';\n    from(modalRef.result)\n      .pipe(\n        filter((data: any) => data),\n        takeUntil(this.ngUnsubcribe))\n      .subscribe(() => this.categoryManagerService.getCategoryList());\n  }\n\n  deleteCategory(category: any): void {\n    const modalRef = this.ModalService.open(ConfirmDeleteComponent, {\n      size: 'lg',\n      backdrop: 'static'\n    });\n    modalRef.componentInstance.category = category;\n    from(modalRef.result)\n      .pipe(\n        filter((data: any) => data),\n        takeUntil(this.ngUnsubcribe))\n      .subscribe(() => this.categoryManagerService.getCategoryList());\n  }\n\n  updateCategory(category: any): void {\n    const modalRef = this.ModalService.open(AddCategoryComponent, {\n      size: 'lg',\n      backdrop: 'static'\n    });\n    modalRef.componentInstance.category = category;\n    modalRef.componentInstance.operation = 'UPDATE';\n    from(modalRef.result)\n      .pipe(\n        filter((data: any) => data),\n        takeUntil(this.ngUnsubcribe))\n      .subscribe(() => this.categoryManagerService.getCategoryList());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CategoryManagerComponent } from './category-manager.component';\nimport { CategoryListComponent } from './category-list/category-list.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: CategoryManagerComponent,\n  children: [\n    { path: '', redirectTo: 'list', pathMatch: 'full' },\n\n    {\n      path: 'list',\n      component: CategoryListComponent\n    },\n    // {\n    //   path: 'create',\n    //   component: CreateUserComponent\n    // },\n    // {\n    //   path: 'edit/:id',\n    //   component: EditUserComponent,\n    //   resolve: { vendor: VendorDetailResolver }\n    // },\n    // {\n    //   path: 'detail/:id',\n    //   component: UserDetailComponent,\n    //   resolve: { vendor: VendorDetailResolver }\n    // },\n    { path: '**', redirectTo: 'list' }\n\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoryManagerRoutingModule { }\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-category-manager',\n  templateUrl: './category-manager.component.html'\n})\nexport class CategoryManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoryManagerRoutingModule } from './category-manager-routing.module';\nimport { ConfirmDeleteComponent } from './confirm-delete/confirm-delete.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CategoryManagerService } from './category.service';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { CategoryManagerComponent } from './category-manager.component';\nimport { AddCategoryComponent } from './add-category/add-category.component';\n\n\n@NgModule({\n  declarations: [CategoryManagerComponent, AddCategoryComponent, CategoryListComponent, ConfirmDeleteComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FormsModule,\n    CategoryManagerRoutingModule\n  ],\n  providers: [CategoryManagerService],\n  entryComponents: [AddCategoryComponent, ConfirmDeleteComponent]\n})\nexport class CategoryManagerModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TableState } from '../core/table-state';\nimport { CategoryService } from '../core/category.service';\nimport { AuthUserService } from '../core/auth-user.service';\n\n@Injectable()\nexport class CategoryManagerService {\n\n  public state: TableState = {\n    page: 1,\n    pageSize: 10,\n    searchTerm: '',\n    sortColumn: '',\n    sortDirection: ''\n  }\n\n  private _total$ = new BehaviorSubject<number>(1);\n  get total$(): Observable<number> {\n    return this._total$.asObservable();\n  }\n\n  private originalList = [];\n\n  private _categoryList$ = new BehaviorSubject<any[]>(null);\n  get categoryList$(): Observable<any[]> {\n    return this._categoryList$.asObservable();\n  }\n\n  constructor(private categoryService: CategoryService, private authUserService: AuthUserService) { }\n\n  addCategory(category: any): Observable<any> {\n    // const category = {\n    //   name: category['name'],\n    //   email: category['email'],\n    //   password: category['password'],\n    //   address: category['address'],\n    //   city: category['city'],\n    //   mobile: category['mobile'],\n    //   status: category['status']\n    // };\n    return this.categoryService.addCategory(category);\n  }\n\n  updateCategory(category: any): Observable<any> {\n    // const category = {\n    //   _id: category['_id'],\n    //   name: category['name'],\n    //   email: category['email'],\n    //   address: category['address'],\n    //   city: category['city'],\n    //   mobile: category['mobile'],\n    //   status: category['status']\n    // };\n    return this.categoryService.updateCategory(category);\n  }\n\n  deleteCategory(id: string): Observable<any> {\n    return this.categoryService.deleteCategory(id);\n  }\n\n  getCategory(id: string): Observable<any> {\n    return this.categoryService.getCategory(id);\n  }\n\n\n  getCategoryList(): void {\n\n    this.categoryService.getCategoryList(this.authUserService.user['vendor_id'])\n      .subscribe((data: any[]) => {\n        console.log('Got Categorys for you: ', data);\n        this._categoryList$.next(data);\n        this._total$.next(data.length);\n        this.originalList = data;\n      });\n  }\n\n  searchText(): void {\n    if (!this.state.searchTerm) {\n      this._categoryList$.next(this.originalList);\n      this._total$.next(this.originalList.length)\n    } else {\n      const searchTerm = this.state.searchTerm.toLocaleLowerCase();\n      const filteredList = this.originalList.filter((item: any) => item['name'] && item['name'].toLocaleLowerCase().includes(searchTerm) ||\n        item['status'] && item['status'].toLocaleLowerCase().includes(searchTerm));\n      this._categoryList$.next(filteredList);\n      this._total$.next(filteredList.length);\n    }\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Confirm Delete</h4>\n    <button class=\"close\" (click)=\"cancel()\" type=\"button\">x</button>\n\n</div>\n<div class=\"modal-body\">\n    <div class=\"form-group\">\n        <div class=\"alert alert-danger\">\n            Are you sure you want to delete {{category.name}}?\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-lg-offset-2 col-lg-10\">\n\n            <button class=\"btn btn-outline-danger\" (click)=\"cancel()\">Cancel</button>\n            <button class=\"btn btn-danger ml-3\" type=\"submit\" (click)=\"delete()\">Delete</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { CategoryManagerService } from '../category.service';\n\n@Component({\n  selector: 'app-confirm-delete',\n  templateUrl: './confirm-delete.component.html'\n})\nexport class ConfirmDeleteComponent implements OnInit, OnDestroy {\n  private ngUnsubcribe = new Subject();\n\n  @Input()\n  category: any;\n\n  constructor(private activatedRoute: ActivatedRoute, private activeModal: NgbActiveModal, private categoryManagerService: CategoryManagerService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubcribe.next();\n    this.ngUnsubcribe.complete();\n  }\n\n  delete(): void {\n    this.categoryManagerService.deleteCategory(this.category.category_id)\n      .pipe(takeUntil(this.ngUnsubcribe))\n      .subscribe((data: any) => {\n        this.activeModal.close(true);\n        console.log('data: ', data.category);\n      });\n  }\n\n  cancel(): void {\n    this.activeModal.close(false);\n  }\n}\n"],"sourceRoot":"webpack:///"}