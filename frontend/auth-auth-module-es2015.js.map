{"version":3,"sources":["./src/app/auth/auth.component.html","./src/app/auth/login/login.component.html","./src/app/auth/auth-manager.service.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,kG;;;;;;;;;;;;ACAf;AAAe,4HAA6D,2WAA2W,SAAS,u6D;;;;;;;;;;;;;;;;;;;;ACArZ;AAEO;AACa;AAG1B;AAErC,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAE7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAC/C,KAAK,CAAC,KAAa,EAAE,QAAgB;QACnC,MAAM,GAAG,GAAG,4EAAe,GAAG,aAAa,CAAC;QAC5C,MAAM,IAAI,GAAG;YACX,KAAK;YACL,QAAQ;YACR,mDAAmD;SACpD,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;YACpC,IAAI,CAAC,0DAAG,CAAC,CAAC,IAAS,EAAE,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAE9B,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;CACF;;YAdiC,+DAAU;;AAF/B,kBAAkB;IAD9B,gEAAU,EAAE;GACA,kBAAkB,CAgB9B;AAhB8B;;;;;;;;;;;;;;;;;;;;;ACRU;AACc;AACE;AACR;AAEjD,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;QACxB,QAAQ,EAAE,CAAC;gBACT,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,qEAAc;aAC1B,CAAC;KACH;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,qEAAc,EAAE;IACzC,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;CAEpD,CAAC;AAMF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAI;AAArB,iBAAiB;IAJ7B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;ACtBoB;AACU;AACA;AAO5D,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,YACU,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QACxC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;IAED,QAAQ;QACN,oCAAoC;QACpC,qCAAqC;QACrC,IAAI;IACN,CAAC;CACF;;YAT4B,uEAAe;;AAH/B,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gNAAoC;QACpC,SAAS,EAAE,CAAC,wEAAkB,CAAC;KAChC,CAAC;GACW,aAAa,CAYzB;AAZyB;;;;;;;;;;;;;;;;;;;;;;;;ACTe;AACM;AAEW;AACD;AACR;AACI;AACE;AAWvD,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAI;AAAd,UAAU;IATtB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,qEAAc,EAAE,6DAAa,CAAC;QAC7C,OAAO,EAAE;YACP,4DAAY;YACZ,sEAAiB;YACjB,kEAAmB;YACnB,oEAAS;SACV;KACF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AClBsC;AACO;AACP;AAC7D,sEAAsE;AACb;AAG1B;AACY;AACsB;AAMjE,IAAa,cAAc,GAA3B,MAAa,cAAc;IAKzB,YAAoB,MAAc,EAAU,WAAwB,EAC1D,kBAAsC,EACtC,KAAqB,EACrB,eAAgC;QAHtB,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC1D,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAPlC,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;QAErC,aAAQ,GAAG,KAAK,CAAC;IAOjB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,yJAAyJ,CAAC,CAAC,CAAC;YACjN,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAED,KAAK;QACH,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;iBACjH,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAClC,SAAS,CAAC,EAAC,IAAI,EAAG,CAAC,IAAW,EAAE,EAAE;oBACjC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;oBACnC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAExB,CAAC;gBACD,KAAK,EAAC,CAAC,KAAU,EAAC,EAAE;oBAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;oBACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACxB,CAAC,EAAC,CAAC,CAAC;SACP;IAEH,CAAC;CACF;;YArC6B,sDAAM;YAAuB,0DAAW;YACtC,wEAAkB;YAC/B,8DAAc;YACJ,8EAAe;;AAR/B,cAAc;IAJ1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,wNAAqC;KACtC,CAAC;GACW,cAAc,CA0C1B;AA1C0B","file":"auth-auth-module-es2015.js","sourcesContent":["export default \"<router-outlet></router-outlet>\\n\"","export default \"<div class=\\\"container-fluid p-0\\\" style=\\\"margin-top: 20vh;\\\">\\n    <div class=\\\"row m-auto justify-content-md-center\\\">\\n        <div class=\\\"card col-sm-12 col-md-12 col-lg-5 col-xs-5 p-0\\\">\\n            <div class=\\\"card-header mb-4\\\">Login</div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"basic-form\\\">\\n                    <ngb-alert *ngIf=\\\"error\\\" type=\\\"danger\\\" (close)=\\\"error = ''\\\">{{ error }}</ngb-alert>\\n                    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-xs-2 col-lg-2 col-md-2 col-sm-12\\\" for=\\\"email\\\">Email:</label>\\n                            <div class=\\\"mr-3 col-xs-9 col-lg-9 col-md-10 col-sm-12\\\">\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" required id=\\\"email\\\">\\n                                <small class=\\\"text-danger\\\"\\n                                    *ngIf=\\\"loginForm.get('email').dirty && loginForm.get('email').errors && loginForm.get('email').errors['pattern']\\\">\\n                                    Please enter a valid email\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-xs-2 col-lg-2 col-md-2 col-sm-12\\\" for=\\\"password\\\">Password:</label>\\n\\n                            <div class=\\\"mr-3 col-xs-9 col-lg-9 col-md-10 col-sm-12\\\">\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" required\\n                                    id=\\\"password\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group text-center\\\">\\n                            <button [disabled]=\\\"loginForm.invalid || logginIn\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n                                <span *ngIf=\\\"logginIn\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                                    aria-hidden=\\\"true\\\"></span>\\n                                Login\\n                            </button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { SERVER_ENDPOINT } from 'src/environments/environment';\n// import { HmacSHA256 } from 'crypto-js';\nimport { IUser } from '../core/user.model';\nimport { tap } from 'rxjs/operators';\n@Injectable()\nexport class AuthManagerService {\n\n  constructor(private httpClient: HttpClient) { }\n  login(email: string, password: string, ): Observable<IUser> {\n    const url = SERVER_ENDPOINT + '/auth/login';\n    const body = {\n      email,\n      password\n      // password: HmacSHA256(email, password).toString()\n    };\n    return this.httpClient.post(url, body).\n      pipe(tap((data: any) => {\n        console.log('data: ', data);\n        \n      }));\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AuthComponent } from './auth.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [{\n    path: 'login',\n    component: LoginComponent\n  }]\n},\n{ path: '**', component: LoginComponent },\n{ path: '', redirectTo: '/login', pathMatch: 'full' },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthManagerService } from './auth-manager.service';\nimport { AuthUserService } from '../core/auth-user.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  providers: [AuthManagerService]\n})\nexport class AuthComponent implements OnInit {\n\n  constructor(\n    private authUserService: AuthUserService) {\n    this.authUserService.loadUser();\n  }\n\n  ngOnInit(): void {\n    // if (!this.authUserService.user) {\n    //   this.authUserService.loadUser();\n    // }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { AuthComponent } from './auth.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [LoginComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    NgbModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthManagerService } from '../auth-manager.service';\n// import { NavbarService } from 'src/app/core/navbar/navbar.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { UserService } from 'src/app/core/user.service';\nimport { IUser } from '../../core/user.model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AuthUserService } from 'src/app/core/auth-user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  private ngUnsubcribe = new Subject();\n  loginForm: FormGroup;\n  logginIn = false;\n  error: string;\n  constructor(private router: Router, private formBuilder: FormBuilder,\n    private authManagerService: AuthManagerService,\n    private route: ActivatedRoute,\n    private authUserService: AuthUserService\n  ) {\n  }\n  \n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubcribe.next();\n    this.ngUnsubcribe.complete();\n  }\n\n  login(): void {\n    if (this.loginForm.valid) {\n      this.logginIn = true;\n      this.authManagerService.login(this.loginForm.get('email').value.trim(), this.loginForm.get('password').value.trim())\n        .pipe(takeUntil(this.ngUnsubcribe))\n        .subscribe({next:  (user: IUser) => {\n          console.log('Logged User: ', user);\n          this.authUserService.login(user);\n          this.logginIn = false;\n      \n        }, \n        error:(error: any)=> {\n          this.error = error['error']['error'];\n          this.logginIn = false;\n        }});\n    }\n\n  }\n}\n"],"sourceRoot":"webpack:///"}