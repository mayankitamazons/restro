{"version":3,"sources":["./src/app/table-manager/add-table/add-table.component.html","./src/app/table-manager/add-table/add-table.component.ts","./src/app/table-manager/confirm-delete/confirm-delete.component.ts","./src/app/table-manager/table-list/table-list.component.html","./src/app/table-manager/table-list/table-list.component.ts","./src/app/table-manager/table-manager-routing.module.ts","./src/app/table-manager/table-manager.component.html","./src/app/table-manager/table-manager.component.ts","./src/app/table-manager/table-manager.module.ts","./src/app/table-manager/table-manager.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+GAOQ,sQAA4D,YAArB;;wBAAoB;MAA3D,umBAA4D,8EAAW,2BAA9C,wBAAa,EAAtC,YAA4D,EAAnC,SAAa,mDAAtC,8GAA4D,qDAAW;+GAM3D,iJAA+F,oGAE/F;+GAOA,iJAAqG,2GAErG;+GAxBpB,gJAA0B,KACtB,8IAAwB,gFAAuD,MAC/E,oNAAuD,YAAjC;;wBAAkB;MAAxC,wBAAuD,8EAAC,MAG5D,+IAAwB,KACpB,+IAAwB,KACpB,kZAA4D,IAC5D;;;;;;qzBAA8B,IAC1B,oJAA4B,KACxB,4LAA+D,mFAAM,MACrE,gLAAwD,KACpD;;;;;;;;;;;;+2DAAkF,IAClF,mZAA+F,IAKvG,oJAA4B,KACxB,+LAAkE,0FAAa,MAC/E,gLAAwD,KACpD;;;;;;;;;;;;+2DAAwF,IACxF,mZAAqG,IAK7G,oJAA4B,KACxB,2KAAoD,mFAAM,MAC1D,gLAAwD,KACpD;;;;;;8yDAA+D,IAC3D,mzBAAuB,kFAAM,MAC7B,qzBAAyB,oFAAQ,MAMrD,+IAAwB,KACpB,8JAAuC,KACnC,mNAA2D,YAAnB;;wBAAkB;MAA1D,wBAA2D,mFAAM,MACjE,gOAAuF,YAAnB;;wBAAkB;MAAtF,wBAAuF,kFACvF,mDAnCO,mBAAa,QAAxB,YAA4D,EAAjD,SAAa,GAClB,mBAAuB,YAA7B,aAA8B,EAAxB,SAAuB,GAI8C,mBAAQ,EAAvE,aAAkF,EAAnB,UAAQ,GAA/B,uBAAsB,EAA9D,aAAkF,EAA1C,UAAsB,GACnC,6EAAmE,WAA9F,aAA+F,EAApE,UAAmE,GAQ5B,mBAAQ,EAA1E,aAAwF,EAAtB,UAAQ,GAAlC,0BAAyB,EAAjE,aAAwF,EAAhD,UAAyB,GACtC,mFAAyE,WAApG,aAAqG,EAA1E,UAAyE,GAQ9C,mBAAQ,EAA9D,aAA+D,EAAT,UAAQ,GAAjC,yBAAwB,EAArD,aAA+D,EAAlC,UAAwB,GACzC,yBAAc,EAAtB,aAAuB,EAAf,sCAAc,EAAtB,aAAuB,EAAf,UAAc,GACd,2BAAgB,EAAxB,aAAyB,EAAjB,wCAAgB,EAAxB,aAAyB,EAAjB,UAAgB,mDA/BpB,qGAAuD,GAO3E,qtBAA8B,GAIlB,o1BAAkF,GASlF,o1BAAwF,GASxF,o1BAA+D,GAWlC,oBAA8B,oBAAnE,aAAuF,EAAlD,UAA8B,GAAoB,4FACvF;;;;;;;;;;;;;;;;AC1CZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACA;AACrC;AAIY;AAMpC,MAAM,yBAAyB;IAWpC;IACE,0BAA0B;IACjB,WAAwB,EACxB,WAA2B,EAC3B,YAAiC;QAFjC,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,iBAAY,GAAZ,YAAY,CAAqB;QAdpC,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;QAErC,aAAQ,GAAG,KAAK,CAAC;QAOjB,cAAS,GAAwB,QAAQ,CAAC;IAU1C,CAAC;IACD,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAED,uBAAuB;IACvB,2BAA2B;IAC3B,6BAA6B;IAC7B,+BAA+B;IAC/B,uCAAuC;IACvC,sCAAsC;IACtC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC9B,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,SAAS,IAAI,QAAQ,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;iBAC7C,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAClC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;iBAChD,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAClC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;CACF;;;;;;;;;;;;;AC3ED;AAAA;AAAA;AAAA;AAAA;AAAoE;AAErC;AAEY;AAOpC,MAAM,sBAAsB;IAMjC,YAAoB,cAA8B,EAAU,WAA2B,EAAU,mBAAwC;QAArH,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QALjI,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;IAKwG,CAAC;IAE9I,QAAQ;IAER,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aACtD,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGCZmB,uHAAgR,KAC5Q,sIAAgB,gFAAO,MACvB,sHAAI,gFAAkB,MAGtB,sHAAI,gFAAoB,MAExB,sHAAI,gFAAmB,MACvB,sHAAI,KAGA,wMAAwD,YAA3B;;wBAA0B;MAAvD,wBAAwD,iFAAI,MAAI,2EAChE,wOAA4E,YAA3B;;wBAA0B;MAA3E,wBAA4E,mFAAM,iCAXtE,+DAAO,GACnB,qEAAkB,GAGlB,wEAAoB,GAEpB,uEAAmB;wGAnC/C,4KAA+C,KAC3C,8IAAwB,KACpB,sHAAI,oFAAO,MACX,qNAAqE,YAA1B;;wBAAyB;MAApE,wBAAqE,4FAAe,MAExF,8IAAuB,KACnB,kJAA4B,KACxB,4JAAsC,qFAAQ,MAC9C,6IAAsB,KAClB;;;;;;;;;;;wBACuF;MAD/C;;wBAAkD;MACtF;;wBAAkD;MADtD,ixCACuF,IAI/F,uJAA+B,KAC3B,gKAAwC,KACpC,2HAAO,KACH,wHAAI,KACA,uHAAI,8EAAC,MACL,uHAAI,iFAAI,MAGR,uHAAI,yFAAY,MAChB,uHAAI,mFAAM,MACV,uHAAI,mFAAM,MAGlB,0HAAO,KACH,qdAAgR,GAA5Q,6SAA2Q,IAkBvR,wKAAgD,KAC5C,kNAC8F,YAA1F;;wBAAyC;MAD7C,4kCAC8F,KAD9E,sLAAqD,KAKrE;;;;;wBACqD;MAAjD;;wBAAgD;MADpD,muCACqD,IACjD,wyBAAuB,8EAAE,MACzB,wyBAAuB,8EAAE,MACzB,wyBAAuB,8EAAE,mDA/CW,mBAAkD,uCAA1F,aACuF,EAD/C,SAAkD,GAmBlF,2eAA2Q,wCAA/Q,aAAgR,EAA5Q,SAA2Q,GAmBnQ,sJAAqD,+BACjE,oBAAyC,iCAAC,oBAA+C,qCAD7F,aAC8F,EAD9E,SAAqD,EACjE,UAAyC,EAAC,UAA+C,GAI3C,2BAAe,EAC7D,oBAAgD,qCADpD,aACqD,EADH,UAAe,EAC7D,UAAgD,GACxC,mBAAc,EAAtB,aAAuB,EAAf,gCAAc,EAAtB,aAAuB,EAAf,UAAc,GACd,mBAAc,EAAtB,aAAuB,EAAf,gCAAc,EAAtB,aAAuB,EAAf,UAAc,GACd,mBAAc,EAAtB,aAAuB,EAAf,gCAAc,EAAtB,aAAuB,EAAf,UAAc,2BA/C1B,stBACuF,GA0CvF,ouBACqD;;;;;;;;;;;;;;;;ACrDrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACxB;AAGc;AAC0B;AACO;AAO7E,MAAM,kBAAkB;IAG7B,YAAmB,mBAAwC,EAAU,YAAsB,EAAU,eAAgC;QAAlH,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAF7H,iBAAY,GAAG,IAAI,4CAAO,EAAE,CAAC;IAGrC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAGD,aAAa;QACX,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wFAAyB,EAAE;YACjE,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QACH,MAAM,KAAK,GAAG;YACZ,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,QAAQ;YAChB,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG;SACxC;QACD,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QACzC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,GAAG,QAAQ,CAAC;QAChD,iDAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;aAClB,IAAI,CACH,6DAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,EAC3B,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC9B,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,+FAAsB,EAAE;YAC9D,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QACH,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QACzC,iDAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;aAClB,IAAI,CACH,6DAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,EAC3B,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC9B,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wFAAyB,EAAE;YACjE,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QAEH,KAAK,CAAC,cAAc,CAAC,GAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5C,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QACzC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,GAAG,QAAQ,CAAC;QAChD,iDAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;aAClB,IAAI,CACH,6DAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,EAC3B,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC9B,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,CAAC;IAC9D,CAAC;CACF;;;;;;;;;;;;;AC9ED;AAAA;AAAA;AAAA;AAAA;AAAuD;AACgB;AACL;AAGlE,MAAM,MAAM,GAAW,CAAG;QACxB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;QAChC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;YAEnD;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,mFAAkB;aAC9B;YACD,IAAI;YACJ,oBAAoB;YACpB,mCAAmC;YACnC,KAAK;YACL,IAAI;YACJ,sBAAsB;YACtB,kCAAkC;YAClC,8CAA8C;YAC9C,KAAK;YACL,IAAI;YACJ,wBAAwB;YACxB,oCAAoC;YACpC,8CAA8C;YAC9C,KAAK;YACL,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE;SAEnC;KACF,CAAC,CAAC;AAMI,MAAM,yBAAyB;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GCvC1C,8lBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAkD;AAO3C,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWD;AAAA;AAAO,MAAM,kBAAkB;CAAI;;;;;;;;;;;;;ACtBnC;AAAA;AAAA;AAAmD;AAI5C,MAAM,mBAAmB;IAsB9B,gEAAgE;IAChE,8CAA8C;IAC9C,kDAAkD;IAClD,IAAI;IAEJ,YAAoB,YAA0B,EAAU,eAAgC;QAApE,iBAAY,GAAZ,YAAY,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAzBjF,UAAK,GAAe;YACzB,IAAI,EAAE,CAAC;YACP,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,aAAa,EAAE,EAAE;SAClB;QAEO,YAAO,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC;QAKzC,iBAAY,GAAG,EAAE,CAAC;QAClB,gBAAW,GAAG,IAAI,oDAAe,CAAQ,IAAI,CAAC,CAAC;IAWqC,CAAC;IAhB7F,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAKD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAWD,QAAQ,CAAC,KAAU;QACjB,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAGD,YAAY;QACV,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;aAC1D,SAAS,CAAC,CAAC,IAAW,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+BAA+B;IAC/B,8EAA8E;IAC9E,oCAAoC;IACpC,0DAA0D;IAC1D,2CAA2C;IAC3C,UAAU;IACV,IAAI;IACJ,uBAAuB;IACvB,2BAA2B;IAC3B,6BAA6B;IAC7B,yBAAyB;IACzB,qCAAqC;IACrC,8BAA8B;IAC9B,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACzC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;SAC5C;aAAM;YACL,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;YAC7D,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;gBAChI,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;gBACtF,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAC1E,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACxC;IACH,CAAC;CACF","file":"table-manager-table-manager-module-ngfactory-es2015.js","sourcesContent":["<div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{operation == 'UPDATE'? 'Update Table': 'Add Table' }}</h4>\n    <button class=\"close\" (click)=\"cancel()\" type=\"button\">x</button>\n\n</div>\n<div class=\"modal-body\">\n    <div class=\"basic-form\">\n        <ngb-alert *ngIf=\"error\" type=\"danger\" (close)=\"error = ''\">{{ error }}</ngb-alert>\n        <form [formGroup]=\"tableForm\">\n            <div class=\"form-group row\">\n                <label class=\"col-xs-2 col-lg-2 col-md-2 col-sm-12\" for=\"name\">Table:</label>\n                <div class=\"mr-3 col-xs-9 col-lg-9 col-md-10 col-sm-12\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"name\" required id=\"name\">\n                    <small class=\"text-danger\" *ngIf=\"tableForm.get('name').dirty && tableForm.get('name').errors\">\n                        Please enter an table\n                    </small>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-xs-2 col-lg-2 col-md-2 col-sm-12\" for=\"seating\">No. of seats:</label>\n                <div class=\"mr-3 col-xs-9 col-lg-9 col-md-10 col-sm-12\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"seating\" required id=\"seating\">\n                    <small class=\"text-danger\" *ngIf=\"tableForm.get('seating').dirty && tableForm.get('seating').errors\">\n                        Please enter number of seats\n                    </small>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-xs-2 col-lg-2 col-md-2 col-sm-12\">Status</label>\n                <div class=\"mr-3 col-xs-9 col-lg-9 col-md-10 col-sm-12\">\n                    <select class=\"form-control\" formControlName=\"status\" required>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-lg-offset-2 col-lg-10\">\n            <button class=\"btn btn-outline-primary\" (click)=\"cancel()\">Cancel</button>\n            <button class=\"btn btn-primary ml-3\" [disabled]=\"tableForm.invalid\" (click)=\"submit()\">{{operation == 'UPDATE'? 'Update': 'Add' }}\n            </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { AuthUserService } from 'src/app/core/auth-user.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TableManagerService } from '../table-manager.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-table',\n  templateUrl: './add-table.component.html'\n})\nexport class AddOrUpdateTableComponent implements OnInit , OnDestroy {\n  private ngUnsubcribe = new Subject();\n  tableForm: FormGroup;\n  logginIn = false;\n  error: string;\n\n  @Input()\n  table: any;\n\n  @Input()\n  operation: 'CREATE' | 'UPDATE' = 'CREATE';\n  constructor(\n    // private router: Router,\n     private formBuilder: FormBuilder,\n     private activeModal: NgbActiveModal,\n     private tableManager: TableManagerService,\n    // private authManagerService: AuthManagerService,\n    // private route: ActivatedRoute,\n\n  ) {\n  }\n  ngOnDestroy() {\n    this.ngUnsubcribe.next();\n    this.ngUnsubcribe.complete();\n  }\n\n  // name: req.body.name,\n  // status: req.body.status,\n  // seating: req.body.seating,\n  // owner_id: req.body.owner_id,\n  // updated_date: req.body.updated_date,\n  // created_date: req.body.created_date\n  ngOnInit(): void {\n    this.tableForm = this.formBuilder.group({\n      table_id : this.table.table_id,\n      name: [this.table.name, [Validators.required]],\n      status: [this.table.status, Validators.required],\n      seating: [this.table.seating, Validators.required],\n      owner_id: [this.table.owner_id, Validators.required]\n    });\n  }\n\n  submit(): void {\n    if (this.operation == 'CREATE') {\n      this.tableManager.addTable(this.tableForm.value)\n        .pipe(takeUntil(this.ngUnsubcribe))\n        .subscribe((data: any) => {\n          this.activeModal.close(true);\n          console.log('data: ', data.vendor);\n        });\n    } else {\n      this.tableManager.updateTable(this.tableForm.value)\n        .pipe(takeUntil(this.ngUnsubcribe))\n        .subscribe((data: any) => {\n          this.activeModal.close(true);\n          console.log('data: ', data.vendor);\n        });\n    }\n  }\n\n  cancel(): void {\n    this.activeModal.close(false);\n  }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { TableManagerService } from '../table-manager.service';\n\n@Component({\n  selector: 'app-confirm-delete',\n  templateUrl: './confirm-delete.component.html'\n})\nexport class ConfirmDeleteComponent implements OnInit, OnDestroy {\n  private ngUnsubcribe = new Subject();\n\n  @Input()\n  table: any;\n\n  constructor(private activatedRoute: ActivatedRoute, private activeModal: NgbActiveModal, private tableManagerService: TableManagerService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubcribe.next();\n    this.ngUnsubcribe.complete();\n  }\n\n  delete(): void {\n    this.tableManagerService.deleteTable(this.table.table_id)\n      .pipe(takeUntil(this.ngUnsubcribe))\n      .subscribe((data: any) => {\n        this.activeModal.close(true);\n        console.log('data: ', data.table);\n      });\n  }\n\n  cancel(): void {\n    this.activeModal.close(false);\n  }\n}\n","<div class=\"d-flex card\" style=\"height: 100%;\">\n    <div class=\"card-title\">\n        <h4>Tables </h4>\n        <button class=\"btn btn-primary pull-right\" (click)=\"addTableModal()\">Add a new table</button>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"form-group row\">\n            <label class=\"col-sm-1 control-label\">Search: </label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"tableManagerService.state.searchTerm\"\n                    (ngModelChange)=\"tableManagerService.searchText()\" placeholder=\"Enter search text\">\n            </div>\n        </div>\n        \n        <div class=\"table-responsive \">\n            <table class=\"table table-striped mr-5\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <!-- <th>Mobile</th>\n                        <th>City</th> -->\n                        <th>No. of seats</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let table of tableManagerService.tableList$ | async | slice: (tableManagerService.state.page-1) * tableManagerService.state.pageSize : (tableManagerService.state.page-1) * tableManagerService.state.pageSize + tableManagerService.state.pageSize; let i = index\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td>{{table['name'] }}</td>\n                        <!-- <td> {{table['mobile']}} </td>\n                        <td>{{table['city']}}</td> -->\n                        <td>{{table['seating']}}</td>\n\n                        <td>{{table['status']}}</td>\n                        <td>\n                            <!-- <a [routerLink]=\"['/table/detail', table['_id']]\">View | </a> -->\n                            <!-- | -->\n                            <a href=\"javascript:void(0)\" (click)=updateTable(table)>Edit</a> |\n                            <a class=\"text-danger\" href=\"javascript:void(0)\" (click)=deleteTable(table)>Delete</a> \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <div class=\"d-flex justify-content-between p-2\">\n                <ngb-pagination [collectionSize]=\"tableManagerService.total$ | async\"\n                    [(page)]=\"tableManagerService.state.page\" [pageSize]=\"tableManagerService.state.pageSize\">\n                </ngb-pagination>\n                <!-- <pagination-controls (pageChange)=\"tableManagerService.state.page = $event\" class=\"pagination\"></pagination-controls> -->\n\n                <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\"\n                    [(ngModel)]=\"tableManagerService.state.pageSize\">\n                    <option [ngValue]=\"10\">10</option>\n                    <option [ngValue]=\"25\">25</option>\n                    <option [ngValue]=\"50\">50</option>\n                </select>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject, from } from 'rxjs';\nimport { TableManagerService } from '../table-manager.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { AddOrUpdateTableComponent } from '../add-table/add-table.component';\nimport { ConfirmDeleteComponent } from '../confirm-delete/confirm-delete.component';\nimport { AuthUserService } from 'src/app/core/auth-user.service';\n\n@Component({\n  selector: 'app-table-list',\n  templateUrl: './table-list.component.html'\n})\nexport class TableListComponent implements OnInit, OnDestroy {\n  private ngUnsubcribe = new Subject();\n\n  constructor(public tableManagerService: TableManagerService, private ModalService: NgbModal, private authUserService: AuthUserService) {\n  }\n\n  ngOnInit(): void {\n    this.tableManagerService.getTableList();\n  }\n\n  ngOnDestroy() {\n    this.ngUnsubcribe.next();\n    this.ngUnsubcribe.complete();\n  }\n\n\n  addTableModal(): void {\n    const modalRef = this.ModalService.open(AddOrUpdateTableComponent, {\n      size: 'lg',\n      backdrop: 'static'\n    });\n    const table = {\n      table_id: '',\n      name: undefined,\n      status: 'Active',\n      seating: undefined,\n      owner_id: this.authUserService.user._id\n    }\n    modalRef.componentInstance.table = table;\n    modalRef.componentInstance.operation = 'CREATE';\n    from(modalRef.result)\n      .pipe(\n        filter((data: any) => data),\n        takeUntil(this.ngUnsubcribe))\n      .subscribe(() => this.tableManagerService.getTableList());\n  }\n\n  deleteTable(table: any): void {\n    const modalRef = this.ModalService.open(ConfirmDeleteComponent, {\n      size: 'lg',\n      backdrop: 'static'\n    });\n    modalRef.componentInstance.table = table;\n    from(modalRef.result)\n      .pipe(\n        filter((data: any) => data),\n        takeUntil(this.ngUnsubcribe))\n      .subscribe(() => this.tableManagerService.getTableList());\n  }\n\n  updateTable(table: any): void {\n    const modalRef = this.ModalService.open(AddOrUpdateTableComponent, {\n      size: 'lg',\n      backdrop: 'static'\n    });\n\n    table['updated_date']= new Date().valueOf();\n    \n    modalRef.componentInstance.table = table;\n    modalRef.componentInstance.operation = 'UPDATE';\n    from(modalRef.result)\n      .pipe(\n        filter((data: any) => data),\n        takeUntil(this.ngUnsubcribe))\n      .subscribe(() => this.tableManagerService.getTableList());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TableListComponent } from './table-list/table-list.component';\nimport { TableManagerComponent } from './table-manager.component';\n\n\nconst routes: Routes = [  {\n  path: '',\n  component: TableManagerComponent,\n  children: [\n    { path: '', redirectTo: 'list', pathMatch: 'full' },\n\n    {\n      path: 'list',\n      component: TableListComponent\n    },\n    // {\n    //   path: 'create',\n    //   component: CreateUserComponent\n    // },\n    // {\n    //   path: 'edit/:id',\n    //   component: EditUserComponent,\n    //   resolve: { vendor: VendorDetailResolver }\n    // },\n    // {\n    //   path: 'detail/:id',\n    //   component: UserDetailComponent,\n    //   resolve: { vendor: VendorDetailResolver }\n    // },\n    { path: '**', redirectTo: 'list' }\n\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TableManagerRoutingModule { }\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-manager',\n  templateUrl: './table-manager.component.html',\n  styleUrls: ['./table-manager.component.scss']\n})\nexport class TableManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TableManagerRoutingModule } from './table-manager-routing.module';\nimport { TableManagerService } from './table-manager.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TableManagerComponent } from './table-manager.component';\nimport { TableListComponent } from './table-list/table-list.component';\nimport { AddOrUpdateTableComponent } from './add-table/add-table.component';\nimport { ConfirmDeleteComponent } from './confirm-delete/confirm-delete.component';\n\n\n@NgModule({\n  declarations: [TableManagerComponent, TableListComponent, AddOrUpdateTableComponent, ConfirmDeleteComponent],\n  imports: [\n    CommonModule,\n    TableManagerRoutingModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [TableManagerService],\n  entryComponents: [AddOrUpdateTableComponent]\n})\nexport class TableManagerModule { }\n","import { Injectable } from '@angular/core';\nimport { TableService } from '../core/table.service';\nimport { AuthUserService } from '../core/auth-user.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TableState } from '../core/table-state';\n\n@Injectable()\nexport class TableManagerService {\n\n  public state: TableState = {\n    page: 1,\n    pageSize: 10,\n    searchTerm: '',\n    sortColumn: '',\n    sortDirection: ''\n  }\n\n  private _total$ = new BehaviorSubject<number>(1);\n  get total$(): Observable<number> {\n    return this._total$.asObservable();\n  }\n\n  private originalList = [];\n  private _tableList$ = new BehaviorSubject<any[]>(null);\n\n  get tableList$(): Observable<any[]> {\n    return this._tableList$.asObservable();\n  }\n\n  // private _subcategoryList$ = new BehaviorSubject<any[]>(null);\n  // get subcategoryList$(): Observable<any[]> {\n  //   return this._subcategoryList$.asObservable();\n  // }\n\n  constructor(private tableService: TableService, private authUserService: AuthUserService) { }\n\n\n\n  addTable(table: any): Observable<any> {\n    return this.tableService.createTable(table);\n  }\n\n  updateTable(table: any): Observable<any> {\n    return this.tableService.updateTable(table);\n  }\n\n  deleteTable(id: string): Observable<any> {\n    return this.tableService.deleteTable(id);\n  }\n\n  getTable(id: string): Observable<any> {\n    return this.tableService.getTable(id);\n  }\n\n\n  getTableList(): void {\n    this.tableService.getTableList(this.authUserService.user._id)\n      .subscribe((data: any[]) => {\n        console.log('Got Tables for you: ', data);\n        this._tableList$.next(data);\n        this.originalList = data;\n        this._total$.next(data.length)\n      });\n  }\n\n  // getSubcategoryList(): void {\n  //   this.subcategoryService.getSubcategoryList(this.authUserService.user._id)\n  //     .subscribe((data: any[]) => {\n  //       console.log('Got Subcategories for you: ', data);\n  //       this._subcategoryList$.next(data);\n  //     });\n  // }\n  // name: req.body.name,\n  // status: req.body.status,\n  // cuisine: req.body.cuisine,\n  // price: req.body.price,\n  // subcategory: req.body.subcategory,\n  // owner_id: req.body.owner_id\n  searchText(): void {\n    if (!this.state.searchTerm) {\n      this._tableList$.next(this.originalList);\n      this._total$.next(this.originalList.length)\n    } else {\n      const searchTerm = this.state.searchTerm.toLocaleLowerCase();\n      const filteredList = this.originalList.filter((item: any) => item['name'] && item['name'].toLocaleLowerCase().includes(searchTerm) ||\n        item['seating'] && item['seating'].toString().toLocaleLowerCase().includes(searchTerm) ||\n        item['status'] && item['status'].toLocaleLowerCase().includes(searchTerm)\n      );\n      this._tableList$.next(filteredList);\n      this._total$.next(filteredList.length);\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}